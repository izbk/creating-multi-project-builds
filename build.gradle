/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

buildscript {
    ScriptHandler scriptHandler ->
        // 配置仓库地址
        scriptHandler.repositories {
            RepositoryHandler repositoryHandler ->
                repositoryHandler.mavenLocal()
                repositoryHandler.mavenCentral()
                repositoryHandler.maven {
                    name 'aliyun'
                    url 'http://maven.aliyun.com/nexus/content/groups/public/'
                    credentials {

                    }
                }
        }
        // 配置gradle本身插件依赖地址
        scriptHandler.dependencies {
        }
}

plugins {
    id 'org.asciidoctor.convert' version '1.5.6' apply false
}

/**
 * 引入全局变量配置
 */
apply from: 'config.gradle'
println rootProject.ext.buildToolsVersion
// 获取settings.gradle中定义的全局变量
println gradle.ext.someGlobalVariable

/**
 * 定义扩展属性 定义公共变量
 * 也可以在gradle.properties文件中定义
 */
ext{

}
/**
 * Project核心api
 *
 * 1 gradle 生命周期api
 * 2 project相关api
 * 3 task相关api
 * 4 属性相关api
 * 5 file相关api
 * 6 其它api
 * 在gradle中，一个build.gradle文件会被编译成project字节码，所以在build.gradle
 * 中编写的所有的代码相当于都是在project中类内部编写的
 */

/**
 * 获取所有project
 */
def getProjects() {
    println '------------'
    println 'Root Project'
    println '------------'

    //getAllProjects()返回所有的Project的set集合
    this.getAllprojects().eachWithIndex{ Project entry, int index ->
        if(index == 0){
            println "Root project : ${entry.name}"
        }else{
            println "+--- project ${entry.name}"
        }
    }
}
// 调用方法
getProjects()

/**
 * 在根project的build.gradle中，获取所有的子project
 * @return
 */
def getAllSubjects(){
    getSubprojects().each{
        println "---- ${project.name}"
    }
}
getAllSubjects()

/**
 * 配置当前结点工程和它的所有的所有的subProject
 */
allprojects {
    group 'net.cdsunrise'
    version '1.0.0'
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

/**
 * 项目文件相关API
 * 1.路径获取API
 * 2.文件操作API
 */
println 'the root dir is ' + getRootDir().absolutePath
println 'the build dir is' + getBuildDir().absolutePath
println 'the project dir is' + getProjectDir().absolutePath


/**
 * Gradle的生命周期的监听
 * Initialization初始化阶段->
 * Configuration配置阶段->
 * Execution执行阶段
 */
/**
 * 配置阶段开始前的监听回调
 */
this.beforeEvaluate {

}
/**
 * 配置阶段后的监听回调
 */
this.afterEvaluate {

}
/**
 * gradle执行完毕后的回调
 */
this.gradle.buildFinished {

}
/**
 * 等同于beforeEvaluate
 */
this.gradle.beforeProject {

}
/**
 * 等同于afterEvaluate
 */
this.gradle.afterProject {

}
